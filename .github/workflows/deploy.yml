name: 'Terraform'

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        env:
          TF_VAR_labRoleArn: ${{ secrets.LAB_ROLE_ARN }}
          TF_VAR_principal_arn: ${{ secrets.PRINCIPAL_ARN }}
          TF_VAR_node_group_name: ${{ secrets.NODE_GROUP_NAME }}
          TF_VAR_policy_arn: ${{ secrets.POLICY_ARN }}
          TF_VAR_cluster_name: ${{ secrets.CLUSTER_NAME }}
          TF_VAR_subnetA: ${{ secrets.SUBNET_A }}
          TF_VAR_subnetB: ${{ secrets.SUBNET_B }}
          TF_VAR_subnetC: ${{ secrets.SUBNET_C }}
          TF_VAR_sgId: ${{ secrets.SG_ID }}
          TF_VAR_accessConfig: ${{ secrets.ACCESS_CONFIG }}
          TF_VAR_instance_type: ${{ secrets.INSTANCE_TYPE }}
        run: terraform plan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          TF_VAR_labRoleArn: ${{ secrets.LAB_ROLE_ARN }}
          TF_VAR_principal_arn: ${{ secrets.PRINCIPAL_ARN }}
          TF_VAR_node_group_name: ${{ secrets.NODE_GROUP_NAME }}
          TF_VAR_policy_arn: ${{ secrets.POLICY_ARN }}
          TF_VAR_cluster_name: ${{ secrets.CLUSTER_NAME }}
          TF_VAR_subnetA: ${{ secrets.SUBNET_A }}
          TF_VAR_subnetB: ${{ secrets.SUBNET_B }}
          TF_VAR_subnetC: ${{ secrets.SUBNET_C }}
          TF_VAR_sgId: ${{ secrets.SG_ID }}
          TF_VAR_accessConfig: ${{ secrets.ACCESS_CONFIG }}
          TF_VAR_instance_type: ${{ secrets.INSTANCE_TYPE }}
        run: terraform apply -auto-approve